name: ImmortalWRT Config Master

on:
  workflow_dispatch:
    inputs:
      interactive_debug:
        type: boolean
        description: '启用浏览器交互调试'
        required: false
        default: false

env:
  BUILD_DIR: /mnt/immortal_build
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master

jobs:
  config_production:
    runs-on: ubuntu-22.04
    timeout-minutes: 240

    steps:
    # ================ 环境初始化 ================
    - name: Checkout Configurations
      uses: actions/checkout@v4

    - name: Setup ImmortalWRT Build Environment
      run: |
        sudo bash -c 'bash <(curl -s https://build-scripts.immortalwrt.org/init_build_environment.sh)'
        sudo mkdir -p ${{ env.BUILD_DIR }}
        sudo chown -R $USER:$USER ${{ env.BUILD_DIR }}
        df -h

    # ================ 源码准备 ================
    - name: Clone Source Code
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        git clone --depth=1 --single-branch -b ${{ env.REPO_BRANCH }} \
          ${{ env.REPO_URL }} openwrt
        cd openwrt
        echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date '+%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    # ================ 配置初始化 ================
    - name: Apply Base Config
      working-directory: ${{ env.BUILD_DIR }}/openwrt
      run: |
        chmod +x "$GITHUB_WORKSPACE/diy-imm.sh"
        "$GITHUB_WORKSPACE/diy-imm.sh"

    # ================ 交互调试 ================
    - name: Browser-based Debug Terminal
      if: ${{ inputs.interactive_debug }}
      uses: devcontainers/ci@v0.3
      with:
        runCmd: |
          echo "🛠️ 交互调试终端已激活"
          echo "工作目录: $(pwd)"
          echo "修改配置后执行:"
          echo "  make defconfig"
          echo "  exit"
          tail -f /dev/null  # 保持会话活跃

    # ================ 成品生成 ================
    - name: Generate Final Config
      working-directory: ${{ env.BUILD_DIR }}/openwrt
      run: |
        make defconfig
        FINAL_CONFIG="immortalwrt_${FILE_NAME}_${COMMIT_HASH}_${BUILD_DATE}.config"
        cp .config "$GITHUB_WORKSPACE/$FINAL_CONFIG"
        echo "CONFIG_PATH=$GITHUB_WORKSPACE/$FINAL_CONFIG" >> $GITHUB_ENV

    # ================ 发布管理 ================
    - name: Upload Artifact
      uses: actions/upload-artifact@v4
      with:
        name: immortal-config
        path: ${{ env.CONFIG_PATH }}

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        name: "ImmortalWRT_config"
        tag_name: "config-imm"
        body: |
          ### 配置文件说明
          - 文件命名包含config文件生成时间，可按需下载
          ⚙️ 使用方式：
          1. 下载后重命名为`.config`
          2. 放置到OpenWrt编译目录
          3. 运行`make defconfig`
        files: ${{ env.CONFIG_PATH }}
        token: ${{ secrets.GITHUB_TOKEN }}
