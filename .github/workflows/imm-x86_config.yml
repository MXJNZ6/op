name: imm_x86-config

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: '启用 Codespaces 调试会话'
        required: false
        default: false
  pull_request:
  push:
    branches: [ main, master ]
    paths:
      - '**.config'
      - '**.sh'

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  CONFIG_FILE: X86_imm.config
  DIY_SH: diy-imm.sh
  FILE_NAME: X86
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id || !github.event.sender.id
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup workdir
      run: |
        sudo mkdir -p /mnt/workdir
        sudo chown -R $USER:$USER /mnt/workdir
        echo "WORKDIR=/mnt/workdir" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          libncurses5-dev \
          libssl-dev \
          git \
          make

    - name: Clone source (with retry)
      working-directory: /mnt/workdir
      run: |
        for i in {1..3}; do
          git clone "$REPO_URL" -b "$REPO_BRANCH" openwrt && break || \
          { echo "::warning::Clone attempt $i/3 failed, retrying..."; sleep 5; }
          [ $i -eq 3 ] && { echo "::error::Failed to clone repository"; exit 1; }
        done

        cd openwrt
        echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date '+%Y-%m-%d_%H%M%S')" >> $GITHUB_ENV
        ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Apply configuration
      run: |
        cd /mnt/workdir/openwrt
        chmod +x "$GITHUB_WORKSPACE/$DIY_SH"
        "$GITHUB_WORKSPACE/$DIY_SH"
        cp "$GITHUB_WORKSPACE/$CONFIG_FILE" .config

    - name: 准备 Codespaces 调试环境
      if: ${{ github.event_name == 'workflow_dispatch' && inputs.debug_enabled }}
      run: |
        echo "⏳ 请手动创建 Codespace 进行调试："
        echo "1. 访问 https://github.com/codespaces"
        echo "2. 选择当前仓库 ($GITHUB_REPOSITORY)"
        echo "3. 点击 'New codespace'"
        echo "4. 工作目录已挂载到 /workspaces/$GITHUB_REPOSITORY/openwrt"
        echo "🔍 调试完成后，请在此页面按 Ctrl+C 终止工作流..."
        sleep 86400  # 保持24小时等待（实际可手动停止）

    - name: Package config
      run: |
        OUTPUT_NAME="${FILE_NAME}_${COMMIT_HASH}_${BUILD_DATE}.config"
        cp "/mnt/workdir/openwrt/.config" "$OUTPUT_NAME"
        echo "RELEASE_NAME=ImmortalWRT ${FILE_NAME} Config ${BUILD_DATE}" >> $GITHUB_ENV
        echo "CONFIG_PATH=$PWD/$OUTPUT_NAME" >> $GITHUB_ENV

    - name: Create release
      uses: softprops/action-gh-release@v1
      env:
        CONFIG_FILENAME: ${{ env.FILE_NAME }}_${{ env.COMMIT_HASH }}_${{ env.BUILD_DATE }}.config
      with:
        name: ImmortalWRT X86 Config
        tag_name: "imm-config"
        body: |
          ### 配置文件说明
          📁 最新版文件名：`${{ env.FILE_NAME }}_${{ env.COMMIT_HASH }}_${{ env.BUILD_DATE }}.config`
      
          🔍 版本信息：
          - 最新版提交哈希：`${{ env.COMMIT_HASH }}`
          - 最新版生成时间：`${{ env.BUILD_DATE }}`（北京时间）
          - 文件命名包含config文件生成时间，可按需下载
      
          ⚙️ 使用方式：
          1. 下载后重命名为`.config`
          2. 放置到OpenWrt编译目录
          3. 运行`make defconfig`
        files: ${{ env.CONFIG_PATH }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
