name: ImmortalWRT X86 Config Builder

on:
  workflow_dispatch:
    inputs:
      debug_enabled:
        type: boolean
        description: '启用调试模式（进入Codespaces交互调试）'
        required: false
        default: false
  push:
    branches: [main, master]
    paths: ['**.config', '**.sh']

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  CONFIG_FILE: X86_imm.config
  DIY_SH: diy-imm.sh
  FILE_NAME: X86
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    timeout-minutes: 120
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        path: source

    - name: Setup dual workspace
      run: |
        mkdir -p /workspaces/$GITHUB_REPOSITORY/openwrt
        sudo mkdir -p /mnt/workdir
        sudo chown -R $USER:$USER /mnt/workdir
        ln -sf /workspaces/$GITHUB_REPOSITORY/openwrt /mnt/workdir/openwrt
        echo "WORKDIR=/mnt/workdir" >> $GITHUB_ENV

    - name: Install build dependencies
      run: |
        sudo apt update && sudo apt install -y \
          build-essential \
          libncurses5-dev \
          libssl-dev \
          git \
          make \
          unison

    - name: Clone source code
      working-directory: /mnt/workdir
      run: |
        git clone --depth=1 "$REPO_URL" -b "$REPO_BRANCH" openwrt || \
        { echo "::error::克隆源码失败"; exit 1; }
        cd openwrt
        echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date '+%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    - name: Apply configuration
      working-directory: /mnt/workdir/openwrt
      run: |
        cp "$GITHUB_WORKSPACE/source/$CONFIG_FILE" .config
        [ -f "$GITHUB_WORKSPACE/source/$DIY_SH" ] && {
          chmod +x "$GITHUB_WORKSPACE/source/$DIY_SH"
          "$GITHUB_WORKSPACE/source/$DIY_SH"
        }

    - name: Start debug session
      if: ${{ inputs.debug_enabled }}
      run: |
        echo "🔧 调试模式已激活" | tee debug_instructions.txt
        echo "1. 访问 https://github.com/codespaces/new?repo=$GITHUB_REPOSITORY" >> debug_instructions.txt
        echo "2. 启动后运行同步命令：" >> debug_instructions.txt
        echo "   while true; do unison -auto /workspaces/$GITHUB_REPOSITORY/openwrt /mnt/workdir/openwrt; sleep 5; done" >> debug_instructions.txt
        echo "3. 终止调试：" >> debug_instructions.txt
        echo "   touch /mnt/workdir/DEBUG_DONE" >> debug_instructions.txt
        
        # 上传新版Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-guide
          path: debug_instructions.txt
        
        # 等待继续信号
        while ! [ -f "/mnt/workdir/DEBUG_DONE" ]; do
          sleep 10
          echo "等待调试完成...(创建/mnt/workdir/DEBUG_DONE文件继续)"
        done

    - name: Generate config package
      run: |
        OUTPUT_NAME="${FILE_NAME}-${COMMIT_HASH}-${BUILD_DATE}.config"
        cp "/mnt/workdir/openwrt/.config" "$OUTPUT_NAME"
        
        if ${{ inputs.debug_enabled }}; then
          echo "::notice::📁 调试模式配置路径："
          echo "/mnt/workdir/openwrt/.config"
          echo "或下载Artifact: $OUTPUT_NAME"
        fi
        
        echo "CONFIG_PATH=$PWD/$OUTPUT_NAME" >> $GITHUB_ENV

    - name: Upload config artifact
      uses: actions/upload-artifact@v4
      with:
        name: openwrt-config
        path: ${{ env.CONFIG_PATH }}
        retention-days: 3

    - name: Create release
      if: ${{ !inputs.debug_enabled }}
      uses: softprops/action-gh-release@v1
      with:
        name: "ImmortalWRT-Config"
        tag_name: "imm-config"
        body: |
          自动生成的配置文件
        files: ${{ env.CONFIG_PATH }}
        token: ${{ secrets.GITHUB_TOKEN }}
