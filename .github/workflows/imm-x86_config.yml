name: ImmortalWRT Config Master

on:
  workflow_dispatch:
    inputs:
      interactive_debug:
        type: boolean
        description: '启用浏览器交互调试'
        required: false
        default: false

env:
  BUILD_DIR: /mnt/immortal_build
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master

jobs:
  config_production:
    runs-on: ubuntu-22.04
    timeout-minutes: 240

    steps:
    - name: 检出配置文件
      uses: actions/checkout@v4

    - name: 设置构建环境
      run: |
        # 安装必要的依赖
        sudo apt-get update -y
        sudo apt-get install -y \
          build-essential \
          git \
          python3 \
          python3-distutils \
          python3-setuptools \
          ncurses-dev \
          gawk \
          gettext \
          libssl-dev \
          xsltproc \
          rsync \
          unzip \
          file \
          wget
        # 创建并设置构建目录权限
        sudo mkdir -p ${{ env.BUILD_DIR }}
        sudo chown -R $USER:$USER ${{ env.BUILD_DIR }}
        df -h

    - name: 克隆源码
      working-directory: ${{ env.BUILD_DIR }}
      run: |
        git clone --depth=1 --single-branch -b ${{ env.REPO_BRANCH }} \
          ${{ env.REPO_URL }} openwrt
        cd openwrt
        echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date '+%Y%m%d-%H%M%S')" >> $GITHUB_ENV

    - name: 应用配置
      working-directory: ${{ env.BUILD_DIR }}/openwrt
      run: |
        chmod +x "$GITHUB_WORKSPACE/diy-imm.sh"
        "$GITHUB_WORKSPACE/diy-imm.sh"

    - name: 交互式调试
      if: ${{ inputs.interactive_debug }}
      working-directory: ${{ env.BUILD_DIR }}/openwrt
      run: |
        # 创建调试脚本
        cat > debug_commands.sh << 'EOF'
        #!/bin/bash
        set -e
        
        while true; do
          echo
          echo "交互式调试模式已激活"
          echo "工作目录: $(pwd)"
          echo "可用命令:"
          echo "  1. menuconfig    - 配置选项"
          echo "  2. defconfig     - 生成配置"
          echo "  3. save          - 保存配置并继续"
          echo "  4. exit          - 不保存配置退出"
          echo
          
          read -p "请输入命令编号 [1-4]: " choice
          
          case $choice in
            1)
              make menuconfig
              ;;
            2)
              make defconfig
              ;;
            3)
              echo "配置已保存，继续工作流..."
              exit 0
              ;;
            4)
              echo "退出调试模式，不保存配置..."
              exit 1
              ;;
            *)
              echo "无效选择，请重试"
              ;;
          esac
        done
        EOF
        
        chmod +x debug_commands.sh
        
        # 执行调试脚本
        ./debug_commands.sh
      shell: bash {0} # 禁用管道fail-fast，允许交互式输入

    - name: 生成配置文件
      if: success() || failure()
      working-directory: ${{ env.BUILD_DIR }}/openwrt
      run: |
        make defconfig
        FINAL_CONFIG="immortalwrt_${{ github.sha }}_${{ env.BUILD_DATE }}.config"
        cp .config "$GITHUB_WORKSPACE/$FINAL_CONFIG"
        echo "CONFIG_PATH=$GITHUB_WORKSPACE/$FINAL_CONFIG" >> $GITHUB_ENV

    - name: 上传配置文件
      uses: actions/upload-artifact@v4
      with:
        name: immortal-config
        path: ${{ env.CONFIG_PATH }}

    - name: 创建 GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        name: "ImmortalWRT_config"
        tag_name: "config-imm"
        body: |
          ### 配置文件说明
          - 文件命名包含config文件生成时间，可按需下载
          ⚙️ 使用方式：
          1. 下载后重命名为`.config`
          2. 放置到OpenWrt编译目录
          3. 运行`make defconfig`
        files: ${{ env.CONFIG_PATH }}
        token: ${{ secrets.GITHUB_TOKEN }}
