name: imm_x86-config

on:
  repository_dispatch:
  workflow_dispatch:
  schedule:
    - cron: "0 23 5 * ?"

env:
  REPO_URL: https://github.com/immortalwrt/immortalwrt
  REPO_BRANCH: master
  CONFIG_FILE: X86_imm.config
  DIY_SH: diy-imm.sh
  FILE_NAME: X86
  TZ: Asia/Shanghai

jobs:
  build:
    runs-on: ubuntu-22.04
    if: github.event.repository.owner.id == github.event.sender.id || !github.event.sender.id
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup workdir
      run: |
        sudo mkdir -p /mnt/workdir
        sudo chown -R $USER:$USER /mnt/workdir
        echo "WORKDIR=/mnt/workdir" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        sudo apt update
        sudo apt install -y \
          build-essential \
          libncurses5-dev \
          libssl-dev \
          git \
          make

    - name: Clone source (with retry)
      working-directory: /mnt/workdir
      run: |
        for i in {1..3}; do
          git clone "$REPO_URL" -b "$REPO_BRANCH" openwrt && break || \
          { echo "::warning::Clone attempt $i/3 failed, retrying..."; sleep 5; }
          [ $i -eq 3 ] && { echo "::error::Failed to clone repository"; exit 1; }
        done

        cd openwrt
        echo "COMMIT_HASH=$(git rev-parse --short HEAD)" >> $GITHUB_ENV
        echo "BUILD_DATE=$(date '+%Y-%m-%d_%H%M%S')" >> $GITHUB_ENV
        ln -sf /mnt/workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Apply configuration
      run: |
        cd /mnt/workdir/openwrt
        chmod +x "$GITHUB_WORKSPACE/$DIY_SH"
        "$GITHUB_WORKSPACE/$DIY_SH"
        cp "$GITHUB_WORKSPACE/$CONFIG_FILE" .config
        make defconfig || { echo "::error::Failed to generate defconfig"; exit 1; }

    - name: Package config
      run: |
        OUTPUT_NAME="${FILE_NAME}_${COMMIT_HASH}_${BUILD_DATE}.config"
        cp "/mnt/workdir/openwrt/.config" "$OUTPUT_NAME"
        echo "RELEASE_NAME=ImmortalWRT ${FILE_NAME} Config ${BUILD_DATE}" >> $GITHUB_ENV
        echo "CONFIG_PATH=$PWD/$OUTPUT_NAME" >> $GITHUB_ENV

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ env.RELEASE_NAME }}
        path: ${{ env.CONFIG_PATH }}
        retention-days: 30

    - name: Create release
      uses: softprops/action-gh-release@v1
      env:
        CONFIG_FILENAME: ${{ env.FILE_NAME }}_${{ env.COMMIT_HASH }}_${{ env.BUILD_DATE }}.config
      with:
        name: ${{ env.RELEASE_NAME }}
        tag_name: "config-${{ env.FILE_NAME }}-${{ env.BUILD_DATE }}"
        body: |
          ### 配置文件说明
          📁 文件名：`${{ env.FILE_NAME }}_${{ env.COMMIT_HASH }}_${{ env.BUILD_DATE }}.config`
      
          🔍 版本信息：
          - 提交哈希：`${{ env.COMMIT_HASH }}`
          - 生成时间：`${{ env.BUILD_DATE }}`（北京时间）
      
          ⚙️ 使用方式：
          1. 下载后重命名为`.config`
          2. 放置到OpenWrt编译目录
          3. 运行`make defconfig`
        files: ${{ env.CONFIG_PATH }}
        draft: false
        prerelease: false
        token: ${{ secrets.GITHUB_TOKEN }}
